#!/bin/bash

BLANK='#00000000'
CLEAR='#ffffff22'
DEFAULT='#1793D1'
TEXT='#1793D1'
WRONG='#cc0000'
WRONG_FILL='#ffd9cc'
VERIFYING='#333333'

FONT='FiraCode Nerd Font Mono'

XIDLEHOOK_LOCK_SOCKET=/tmp/xidlehook.sock

NO_FORK="--nofork"

function pauseNotifications() {
    dunstctl set-paused true
}

function resumeNotifications() {
    dunstctl set-paused false
}

function turnScreenOff() {
    xset dpms force off
}

function turnScreenOn() {
    xset dpms force on
}

function muteVolume() {
    /home/cmiranda/bin/amixer-vol mute
}

function unmuteVolume() {
    /home/cmiranda/bin/amixer-vol unmute
}

function runLocker() {
    betterlockscreen -l

    # i3lock \
    #     $NO_FORK \
    #     --insidever-color=$CLEAR \
    #     --ringver-color=$BLANK \
    #     \
    #     --insidewrong-color=$WRONG_FILL \
    #     --ringwrong-color=$WRONG \
    #     \
    #     --inside-color=$BLANK \
    #     --ring-color=$BLANK \
    #     --line-color=$BLANK \
    #     --separator-color=$BLANK \
    #     \
    #     --verif-color=$TEXT \
    #     --wrong-color=$WRONG \
    #     --time-color=$TEXT \
    #     --date-color=$TEXT \
    #     --layout-color=$TEXT \
    #     --keyhl-color=$DEFAULT \
    #     --bshl-color=$DEFAULT \
    #     \
    #     --screen 1 \
    #     --blur 10 \
    #     --radius 360 \
    #     --ring-width 20 \
    #     --clock \
    #     --time-str="%H:%M:%S" \
    #     --time-size=100 \
    #     --time-font=$FONT \
    #     --date-str="" \
    #     --date-size=20 \
    #     --date-font=$FONT \
    #     --verif-text="Verifying..." \
    #     --wrong-text="Wrong!" \
    #     --pass-media-keys
}

function lockScreen() {
    if pgrep -x "i3lock" >/dev/null; then
        echo "Computer already locked. Aborting..."
    else
        pauseNotifications
        muteVolume
        turnScreenOff

        openrgb --mode static --color 000000
        runLocker
        openrgb --mode static --color 0313fc

        resumeNotifications
        unmuteVolume
    fi
}

ARGS=("$@")
if [[ " ${ARGS[@]} " =~ " --force " ]]; then
    echo "Forcing lock screen..."
    lockScreen
elif [[ " ${ARGS[@]} " =~ " --recheck-inactivity" ]]; then
    if pgrep -x "i3lock" >/dev/null; then
        echo "i3lock is still running but user never unlocked. Turning screen off again."
        turnScreenOff
    fi
elif [[ " ${ARGS[@]} " =~ " --suspend" ]]; then
    echo "Forking lock screen..."
    NO_FORK=""
    lockScreen
else
    #
    # Abort if there are any kind of sinks running (music audio, meetings, etc.)
    #
    echo "Checking running sinks..."
    RUNNING_SINKS=$(pactl list short sinks | grep -c RUNNING)
    if [ $RUNNING_SINKS -gt 0 ]; then
        echo "There are $RUNNING_SINKS running sinks. Aborting lock screen."
        xidlehook-client --socket $XIDLEHOOK_LOCK_SOCKET reset-idle
    else
        echo "No running sinks. Locking screen..."
        lockScreen
    fi
fi
