[global]

    monitor = 0

    # If this option is set to mouse or keyboard, the monitor option
    # will be ignored.
    follow = mouse

    # Geometery reference --> [{width}]x{height}[+/-{x}+/-{y}]
    # The geometry of the message window.
    # The height is measured in number of notifications everything else
    # in pixels.  If the width is omitted but the height is given
    # ("-geometry x2"), the message window expands over the whole screen
    # (dmenu-like).  If width is 0, the window expands to the longest
    # message displayed.  A positive x is measured from the left, a
    # negative from the right side of the screen.  Y is measured from
    # the top and down respectively.
    # The width can be negative.  In this case the actual width is the
    # screen width minus the width defined in within the geometry option.
    #geometry = "800x5-30+20"

    ### Geometry ###

    # dynamic width from 0 to 300
    # width = (0, 300)
    # constant width of 300
    width = 600

    # The maximum height of a single notification, excluding the frame.
    height = 150

    # Position the notification in the top right corner
    origin = top-right

    # Offset from the origin
    offset = 32x32

    # Scale factor. It is auto-detected if value is 0.
    scale = 0

    # Maximum number of notification (0 means no limit)
    notification_limit = 0

    # Radius of the four corners of the notification
    corner_radius = 0

    # Show how many messages are currently hidden (because of geometry).
    indicate_hidden = yes

    # Shrink window if it's smaller than the width.  Will be ignored if width is 0.
    shrink = no

    # The transparency of the window.  Range: [0; 100].
    transparency = 0
    
    # The height of the entire notification.  If the height is smaller
    # than the font height and padding combined, it will be raised
    # to the font height and padding.
    notification_height = 0

    # Show multiple notifications in the same box
    separator_height = 2

    # Define a color for the separator.
    # possible values are:
    #  * auto: dunst tries to find a color fitting to the background;
    #  * foreground: use the same color as the foreground;
    #  * frame: use the same color as the frame;
    #  * anything else will be interpreted as a X color.
    separator_color = auto

    # Add vertical padding to the inside of the notification
    padding = 15
    # Add horizontal padding for when the text gets long enough
    horizontal_padding = 15

    # The frame color and width of the notification
    frame_width = 0
    # frame_color = ""

    sort = yes

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    # Set to 0 to disable.
    idle_threshold = 0

    # Font and typography settings
    font = FiraCode Nerd Font Mono Retina 11
    alignment = left
    word_wrap = yes

    # The spacing between lines.  If the height is smaller than the font height, it will get raised to the font height.
    line_height = 0

    # Allow some HTML tags like <i> and <u> in notifications
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    # Markup is allowed
    format = "<span foreground='#f3f4f5'><b>%s %p</b></span>\n%b"

    show_age_threshold = 60

    # When word_wrap is set to no, specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = end

    # Ignore newlines '\n' in notifications.
    ignore_newline = no

    # Stack together notifications with the same content
    stack_duplicates = true

    # Hide the count of stacked notifications with the same content
    hide_duplicate_count = true 

    # Display indicators for URLs (U) and actions (A).
    show_indicators = no

    # Align icons left/right/off
    icon_position = left

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 80

    icon_path = /usr/share/icons/Paper/48x48/status/:/usr/share/icons/Paper/48x48/devices/:/usr/share/icons/Paper/48x48/apps/

    sticky_history = no
    history_length = 20

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true

    startup_notification = false

    force_xinerama = false

    ### mouse
    # Defines action of mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: If the notification has exactly one action, or one is marked as default,
    #              invoke it. If there are multiple and no default, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    mouse_left_click = close_current
    mouse_middle_click = close_all
    mouse_right_click = do_action

# Set the background and foreground (text) color for all notifications
[shortcuts]
    close = ctrl+space
    close_all = ctrl+shift+space
    history = ctrl+shift+h
    context = ctrl+shift+period

[urgency_low]
    # This urgency should be used only 
    # for volume/brightness notification
    background = "#002b36"
    foreground = "#eee8d5"
    timeout = 10
    # icon = /dev/null

[urgency_normal]
    background = "#002b36"
    foreground = "#eee8d5"
    timeout = 10
    # icon = /dev/null

[urgency_critical]
    background = "#d64e4e"
    foreground = "#f0e0e0"
    frame_color = "#d64e4e"
    timeout = 0
    # icon = /usr/share/icons/Paper/48x48/status/dialog-warning.png

[update_notifications_count]
    script = /home/cmiranda/bin/update-notifications-count

[element_notifications]
   appname = Element
   script = /home/cmiranda/bin/process-element-notifications
