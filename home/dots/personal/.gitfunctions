#!/bin/bash

# Register aliases
if [[ -z "$FORGIT_NO_ALIASES" ]]; then
    alias "${forgit_add:-gadd}"='forgit::add'
    alias "${forgit_reset_head:-greset}"='forgit::reset::head'
    alias "${forgit_log:-glog}"='forgit::log'
    alias "${forgit_diff:-gdiff}"='forgit::diff'
    alias "${forgit_ignore:-gignore}"='forgit::ignore'
    alias "${forgit_restore:-grestore}"='forgit::restore'
    alias "${forgit_clean:-gclean}"='forgit::clean'
    alias "${forgit_stash_show:-gss}"='forgit::stash::show'
fi

#
# git count
# Counts commits from current branch that are ahead of a given branch (fallbacking to default branches)
#
function gc(){
  if [ $# -eq 0 ]; then
    COMMITS=`git rev-list --count develop..HEAD 2>/dev/null`
    if [[ $? != 0 ]]; then
      COMMITS=`git rev-list --count main..HEAD 2>/dev/null`
    fi
    if [[ $? != 0 ]]; then
      COMMITS=`git rev-list --count master..HEAD 2>/dev/null`
    fi
  else
    COMMITS=`git rev-list --count $1..HEAD 2>/dev/null`
  fi
  echo $COMMITS
}

#
# git log -<count>
#
function glc(){
  count=`gc $1`;
  echo "Showing $count commits\n";
  `glog -${count}`;
}

#
# git commit session
#
function gci() {
  gadd && g ci
}

#
# git commit session using gitmoji
#
function gce() {
  gadd && g ce
}

function gpl(){
  git pull --rebase origin `git branch | awk '{if ($1 == "*"){print $2}}'`
}

function gph() {
  git push origin `git branch | awk '{if ($1 == "*"){print $2}}'`
}

function gphf() {
  git push --force-with-lease origin `git branch | awk '{if ($1 == "*"){print $2}}'`
}
