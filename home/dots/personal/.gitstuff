#!/bin/bash

# GIT COMMANDS
alias st='git status'
alias br='git branch'
alias ci='git commit'
alias co='git checkout '
alias gk='gitk --all&'
alias reset='git stash apply'
alias revert='git reset HEAD~1'
alias cleanbranches='git branch | grep -v "master" | grep -v "esh-develop" | grep -v "development" | xargs -n 1 git branch -D'
alias localprune='git branch | grep -v "development" | grep -v "master" | xargs git branch -D'

function got(){
  echo " -> Fetching new branches ...";
  git fetch origin;
  echo " -> Checking out $@ ...";
  git checkout -b "$@" origin/"$@";
  echo " -> Pulling latest changes from origin/$@ ...";
  git pull origin "$@";
}

function gpl(){
  git pull --rebase origin `git branch | awk '{if ($1 == "*"){print $2}}'`
}

function gph(){
  git push origin `git branch | awk '{if ($1 == "*"){print $2}}'`
}

function gphf(){
  git push -f origin `git branch | awk '{if ($1 == "*"){print $2}}'`
}

function ga(){
  git commit -a --amend --no-edit
}

function gr(){
  git rebase -i --autosquash HEAD~$1
}

function gcf(){
  git ci --fixup $1
}

function gcaf(){
  git ci -a --fixup $1
}

function gwipe(){
  git branch -D $1 && git push origin :$1
}

function gc(){
  COMMITS=`git rev-list --count develop..HEAD 2>/dev/null`
  if [[ $? != 0 ]]; then
    COMMITS=`git rev-list --count main..HEAD 2>/dev/null`
  fi
  if [[ $? != 0 ]]; then
    COMMITS=`git rev-list --count master..HEAD 2>/dev/null`
  fi
  echo $COMMITS
}

function glc(){
  count=`gc`;
  echo "Showing $count commits\n";
  glog $count;
}
